<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aws on namkyujin.com</title><link>https://iamkyu.github.io/tags/aws/</link><description>Recent content in aws on namkyujin.com</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Wed, 23 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://iamkyu.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Amazon SQS 에서 배달 못한 편지 처리</title><link>https://iamkyu.github.io/post/20191023-amazon-sqs-dlq/</link><pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate><guid>https://iamkyu.github.io/post/20191023-amazon-sqs-dlq/</guid><description>Amazon SQS 에서 배달 못한 편지 처리 현재 웹 애플리케이션을 개발하는 환경에서는 비동기 메시징 기반의 통신을 하고 있다.
각 시스템은 도메인에 어떤 일이 발생했을 때 이벤트를 메시지에 담아 보내고 여기에 관심 있는 다른 시스템 즉, 다른 도메인에서는 이에 따라 어떤 행동을 취한다.
이벤트에 관심 있는 시스템과 1:1 구성이라면 AWS의 SQS만으로 충분하지만, 1:N 구성이었기에 팬아웃패턴의 메시징을 구현해야 했다.
AWS의 완전 관리형 서비스인 SNS, SQS 조합을 통해 어렵지 않게 구현할 수 있는 반면 실제 구현에 있어서는 여러가지 고민이 필요하다.</description></item></channel></rss>